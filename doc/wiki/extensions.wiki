= Gaupol Extensions =

<<TableOfContents(2)>>

This page contains a list of third party extensions. If you have written an extension that may be of interest for others, you can post a description of the extension and a link to where it can be downloaded from. If you have an idea for what would make an excellent extension, but cannot implement it yourself you can post that idea in the hope that someone would pick it up.

To install one of the extensions, place the files in a directory under `~/.local/share/gaupol/extensions` on Unix or under `C:\Documents and Settings\USERNAME\Application Data\Gaupol\extensions` on Windows XP or under `C:\Users\USERNAME\AppData\Roaming\Gaupol\extensions` on Windows Vista and 7. The files should include at least a `.extension` file and one or more `.py` files. To activate the extension, select ''Preferences'' from the ''Edit'' menu and go to the ''Extensions'' tab.

== Available Extensions ==

Please use the following template to post your extension. If you need to add screenshots or a description longer than a couple lines, please add a short entry here with a link to a subpage with the detailed information.

{{{
=== Name of the Extension ===
Description of the extension<<BR>>
Author: Your Name<<BR>>
[[http://link.to.download.location/]]
}}}

== Deprecated Extensions ==

The following extensions are deprecated and '''will not work with Gaupol 0.20 and later'''. They need to be ported to Python 3, GTK+ 3 and the Py''''''GObject introspection bindings. See the updated [[Gaupol/WritingExtensions|documentation on writing extensions]].

=== Apertium ===
Machine Translation suggestions through Apertium<<BR>>
Author: Kevin Brubeck Unhammer<<BR>>
[[http://wiki.apertium.org/wiki/Translating_subtitles]]

== Ideas for Extensions ==

=== Format-Specific Editing ===

Gaupol supports editing of a limited amount of fields common to all subtitle file formats: start position, end position, duration and text. For editing markup, Gaupol provides only means to toggle italicization. While these should be sufficient for normal subtitles and good limits to ensure readability, some may wish to utilize bling-features of formats that support them. Editing format-specific fields and format-specific markup can be implemented with extensions. For example, for Sub Station Alpha formats the following could be done with an extension.

 * Add columns to the subtitle view for all additional fields in Sub Station Alpha formats. This may require writing custom cell renderers, e.g. a color cell renderer, which displays the color and where editing happens with a color picker dialog, while the data is saved as hexadecimal strings.

 * Add dialogs for editing the header and styles.

 * Add tools for manipulating markup, e.g. applying certain markup on a subtitle or removing it.
